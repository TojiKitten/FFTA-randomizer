import FFTAData from "../FFTAData";
import * as FFTAUtils from "../utils/FFTAUtils";

const characterWeaponAnimationPointers = 0xa39c40;
const supportedCharacters = 88;
const weaponAnimationPointers =
  characterWeaponAnimationPointers + 4 * supportedCharacters;
const weaponAnimations = 0x120;
const animationsTable =
  weaponAnimationPointers + weaponAnimations * supportedCharacters;
const animationLength = 0xbc0;

type KeyFrame = {
  offset: number;
  oam: number;
  duration: number;
  unknown: number;
  short1: number;
  short2: number;
  xPos: number;
  yPos: number;
  short5: number;
};

export function firstPass(fftaData: FFTAData) {
  let allSprites: Array<any> = [];

  fftaData.animations.forEach((animation) => {
    let spriteSheetLocations = {};
    animation
      .filter((animationPointer) => animationPointer > 0)
      .forEach((animationPointer) => {
        const keyFrames = FFTAUtils.convertWordUint8Array(
          fftaData.rom.slice(animationPointer, animationPointer + 4),
          true
        );

        for (var i = 0; i < keyFrames; i++) {
          const start = animationPointer + 4 + i * 0x14;
          const sheetPosition = FFTAUtils.convertWordUint8Array(
            fftaData.rom.slice(start, start + 4),
            true
          );
          const oam = FFTAUtils.convertShortUint8Array(
            fftaData.rom.slice(start + 4, start + 8),
            true
          );
          spriteSheetLocations = {
            ...spriteSheetLocations,
            [sheetPosition.toString(16)]: oam.toString(16),
          };
        }
      });

    allSprites.push(spriteSheetLocations);
  });

  for (var i = 0; i < supportedCharacters; i++) {
    const supportedCharacter = allSprites[i];
    if (Object.entries(supportedCharacter).length < 42) continue;

    const characterFrames = Object.entries(supportedCharacter).sort((a, b) => {
      return parseInt(a[0], 16) > parseInt(b[0], 16) ? 1 : -1;
    });

    const newWeapon0Pointer =
      0x08000000 + animationsTable + i * animationLength;
    // Offsets 0,2,4
    let newWeapon0 = buildAnimation([
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x16,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x19,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    const newWeapon1Pointer = newWeapon0Pointer + newWeapon0.length;

    // Offsets 1,3,5
    let newWeapon1 = buildAnimation([
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x14,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x1,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x1,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x1,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[23][0], 16),
        oam: characterFrames[23][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x17,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    const newWeapon2Pointer = newWeapon1Pointer + newWeapon1.length;
    // Offsets 6,8
    let newWeapon2 = buildAnimation([
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[7][0], 16),
        oam: characterFrames[7][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0xfe,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x12,
        unknown: 0x2,
        short1: 0x0,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0xfe,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0xa,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffc,
        xPos: 0xa,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0xa,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1b,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    const newWeapon3Pointer = newWeapon2Pointer + newWeapon2.length;
    // Offsets 7,9
    let newWeapon3 = buildAnimation([
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[10][0], 16),
        oam: characterFrames[10][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x2,
        unknown: 0x2,
        short1: 0x0,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x2,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x10,
        unknown: 0x2,
        short1: 0x0,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x2,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x6,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffc,
        xPos: 0x6,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x6,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1b,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xffe,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    const newWeapon4Pointer = newWeapon3Pointer + newWeapon3.length;
    // Offset 10
    let newWeapon4 = buildAnimation([
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[7][0], 16),
        oam: characterFrames[7][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0xfe,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x12,
        unknown: 0x2,
        short1: 0x0,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0xfe,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0xc,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffc,
        xPos: 0xc,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0xc,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1b,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0xb,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffe,
        xPos: 0xb,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    const newWeapon5Pointer = newWeapon4Pointer + newWeapon4.length;
    // Offset 11
    let newWeapon5 = buildAnimation([
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[10][0], 16),
        oam: characterFrames[10][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x2,
        unknown: 0x2,
        short1: 0x0,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x2,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x12,
        unknown: 0x2,
        short1: 0x0,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x2,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffc,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1b,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xffe,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    const newWeapon6Pointer = newWeapon5Pointer + newWeapon5.length;
    // Offsets 12, 14, 16
    let newWeapon6 = buildAnimation([
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x3,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x18,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x3,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x3,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0x3,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x27,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x3,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0x3,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    const newWeapon7Pointer = newWeapon6Pointer + newWeapon6.length;
    // Offsets 13, 15, 17
    let newWeapon7 = buildAnimation([
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x18,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x27,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    const newWeapon8Pointer = newWeapon7Pointer + newWeapon7.length;
    // Offsets 18, 19
    let newWeapon8 = buildAnimation([
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x14,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1b,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    const newWeapon9Pointer = newWeapon8Pointer + newWeapon8.length;
    // Offset 19, 21
    let newWeapon9 = buildAnimation([
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x14,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x1,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x1,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x1,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[23][0], 16),
        oam: characterFrames[23][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1b,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xffe,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    const newWeapon10Pointer = newWeapon9Pointer + newWeapon9.length;
    // Offsets 22
    let newWeapon10 = buildAnimation([
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x14,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1b,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    const newWeapon11Pointer = newWeapon10Pointer + newWeapon10.length;
    // Offset 23
    let newWeapon11 = buildAnimation([
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x14,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x1,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x1,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x1,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[23][0], 16),
        oam: characterFrames[23][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x17,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xffe,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    // Add pointer to first animation pointer
    fftaData.rom.set(
      FFTAUtils.getWordUint8Array(
        0x08000000 + weaponAnimationPointers + i * weaponAnimations,
        true
      ),
      characterWeaponAnimationPointers + i * 4
    );

    const animationPointersWrite = FFTAUtils.joinUint8Array([
      FFTAUtils.getWordUint8Array(newWeapon0Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon1Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon0Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon1Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon0Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon1Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon2Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon3Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon2Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon3Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon4Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon5Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon6Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon7Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon6Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon7Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon6Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon7Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon8Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon9Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon8Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon9Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon10Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon11Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
    ]);

    // Add all weapon animation pointers to the table
    fftaData.rom.set(
      animationPointersWrite,
      weaponAnimationPointers + i * weaponAnimations
    );

    const animationBlock = FFTAUtils.joinUint8Array([
      newWeapon0,
      newWeapon1,
      newWeapon2,
      newWeapon3,
      newWeapon4,
      newWeapon5,
      newWeapon6,
      newWeapon7,
      newWeapon8,
      newWeapon9,
      newWeapon10,
      newWeapon11,
    ]);

    // Add all animations to the table
    fftaData.rom.set(animationBlock, animationsTable + i * animationLength);
  }
}

function buildAnimation(keyFrames: Array<KeyFrame>) {
  let animation = new Uint8Array(
    FFTAUtils.getWordUint8Array(keyFrames.length, true)
  );

  keyFrames.forEach((frame: KeyFrame) => {
    const offset = new Uint8Array(
      FFTAUtils.getWordUint8Array(frame.offset, true)
    );
    const oam = new Uint8Array(
      FFTAUtils.getWordUint8Array(parseInt(frame.oam.toString(), 16), true)
    );
    const duration = new Uint8Array([frame.duration]);
    const unknown = new Uint8Array([frame.unknown]);
    const short1 = new Uint8Array(
      FFTAUtils.getShortUint8Array(frame.short1, true)
    );
    const short2 = new Uint8Array(
      FFTAUtils.getShortUint8Array(frame.short2, true)
    );
    const xPos = new Uint8Array(FFTAUtils.getShortUint8Array(frame.xPos, true));
    const yPos = new Uint8Array(FFTAUtils.getShortUint8Array(frame.yPos, true));
    const short5 = new Uint8Array(
      FFTAUtils.getShortUint8Array(frame.short5, true)
    );
    animation = FFTAUtils.joinUint8Array([
      animation,
      offset,
      oam,
      duration,
      unknown,
      short1,
      short2,
      xPos,
      yPos,
      short5,
    ]);
  });

  const alignment = 4 - (animation.length % 4);
  if (alignment != 4) {
    animation = FFTAUtils.joinUint8Array([
      animation,
      new Uint8Array(alignment),
    ]);
  }
  return animation;
}
