import FFTAData from "../FFTAData";
import * as FFTAUtils from "../utils/FFTAUtils";

const characterWeaponAnimationPointers = 0xa39c40;
const supportedCharacters = 88;
const weaponAnimationPointers =
  characterWeaponAnimationPointers + 4 * supportedCharacters;
const weaponAnimations = 0x120;
const animationsTable =
  weaponAnimationPointers + weaponAnimations * supportedCharacters;
const animationLength = 0xbc0;

const characterAbilityAnimationPointers =
  animationsTable + animationLength * supportedCharacters;
const abilityAnimationPointers =
  characterAbilityAnimationPointers + 4 * supportedCharacters;
const abilityAnimations = 0x150;
const abilityAnimationsTable =
  abilityAnimationPointers + abilityAnimations * supportedCharacters;
const abilityAnimationLength = 0xa80;

type KeyFrame = {
  offset: number;
  oam: number;
  duration: number;
  unknown: number;
  short1: number;
  short2: number;
  xPos: number;
  yPos: number;
  short5: number;
};

/**
 * Creates standardized animations for all jobs based on existing key frame information
 * @param fftaData Object to create animations for
 */
export function createNewAnimations(fftaData: FFTAData) {
  let allSprites: Array<any> = [];

  // Get all of the animations for all pointers
  fftaData.animations.forEach((animation) => {
    let spriteSheetLocations = {};
    animation
      .filter((animationPointer) => animationPointer > 0)
      .forEach((animationPointer) => {
        const keyFrames = FFTAUtils.convertWordUint8Array(
          fftaData.rom.slice(animationPointer, animationPointer + 4),
          true
        );

        for (var i = 0; i < keyFrames; i++) {
          const start = animationPointer + 4 + i * 0x14;
          const sheetPosition = FFTAUtils.convertWordUint8Array(
            fftaData.rom.slice(start, start + 4),
            true
          );
          const oam = FFTAUtils.convertShortUint8Array(
            fftaData.rom.slice(start + 4, start + 8),
            true
          );
          spriteSheetLocations = {
            ...spriteSheetLocations,
            [sheetPosition.toString(16)]: oam.toString(16),
          };
        }
      });

    allSprites.push(spriteSheetLocations);
  });

  // For every supported character, create new weapon animations for them based on existing key frames
  for (var i = 0; i < supportedCharacters; i++) {
    const supportedCharacter = allSprites[i];

    // If the character does not have enough animations, skip them
    if (Object.entries(supportedCharacter).length < 42) continue;

    // Sort animations by offset
    const characterFrames = Object.entries(supportedCharacter).sort((a, b) => {
      return parseInt(a[0], 16) > parseInt(b[0], 16) ? 1 : -1;
    });

    // Create new pointers and animations based on existing key frames
    // Offsets 0,2,4
    const newWeapon0Pointer =
      0x08000000 + animationsTable + i * animationLength;
    let newWeapon0 = buildAnimation([
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x16,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x19,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    // Offsets 1,3,5
    const newWeapon1Pointer = newWeapon0Pointer + newWeapon0.length;
    let newWeapon1 = buildAnimation([
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x14,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x1,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x1,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x1,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[23][0], 16),
        oam: characterFrames[23][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x17,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    // Offsets 6,8
    const newWeapon2Pointer = newWeapon1Pointer + newWeapon1.length;
    let newWeapon2 = buildAnimation([
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[7][0], 16),
        oam: characterFrames[7][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0xfe,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x12,
        unknown: 0x2,
        short1: 0x0,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0xfe,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0xa,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffc,
        xPos: 0xa,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0xa,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1b,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    // Offsets 7,9
    const newWeapon3Pointer = newWeapon2Pointer + newWeapon2.length;
    let newWeapon3 = buildAnimation([
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[10][0], 16),
        oam: characterFrames[10][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x2,
        unknown: 0x2,
        short1: 0x0,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x2,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x10,
        unknown: 0x2,
        short1: 0x0,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x2,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x6,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffc,
        xPos: 0x6,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x6,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1b,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xffe,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    // Offset 10
    const newWeapon4Pointer = newWeapon3Pointer + newWeapon3.length;
    let newWeapon4 = buildAnimation([
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[7][0], 16),
        oam: characterFrames[7][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0xfe,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x12,
        unknown: 0x2,
        short1: 0x0,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0xfe,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0xc,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffc,
        xPos: 0xc,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0xc,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1b,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0xb,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffe,
        xPos: 0xb,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    // Offset 11
    const newWeapon5Pointer = newWeapon4Pointer + newWeapon4.length;
    let newWeapon5 = buildAnimation([
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[10][0], 16),
        oam: characterFrames[10][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x2,
        unknown: 0x2,
        short1: 0x0,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x2,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x12,
        unknown: 0x2,
        short1: 0x0,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x2,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffc,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1b,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xffe,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    // Offsets 12, 14, 16
    const newWeapon6Pointer = newWeapon5Pointer + newWeapon5.length;
    let newWeapon6 = buildAnimation([
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x3,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x18,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x3,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x3,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0x3,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x27,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x3,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0x3,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    // Offsets 13, 15, 17
    const newWeapon7Pointer = newWeapon6Pointer + newWeapon6.length;
    let newWeapon7 = buildAnimation([
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x18,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x27,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    // Offsets 18, 19
    const newWeapon8Pointer = newWeapon7Pointer + newWeapon7.length;
    let newWeapon8 = buildAnimation([
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x14,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1b,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    // Offset 19, 21
    const newWeapon9Pointer = newWeapon8Pointer + newWeapon8.length;
    let newWeapon9 = buildAnimation([
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x14,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x1,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x1,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x1,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[23][0], 16),
        oam: characterFrames[23][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1b,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xffe,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    // Offsets 22
    const newWeapon10Pointer = newWeapon9Pointer + newWeapon9.length;
    let newWeapon10 = buildAnimation([
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x14,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1b,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    // Offset 23
    const newWeapon11Pointer = newWeapon10Pointer + newWeapon10.length;
    let newWeapon11 = buildAnimation([
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x14,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x1,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x1,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x1,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[23][0], 16),
        oam: characterFrames[23][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x1,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x17,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffc,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xffe,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    // Add pointer to the weapon animation pointer table
    fftaData.rom.set(
      FFTAUtils.getWordUint8Array(
        0x08000000 + weaponAnimationPointers + i * weaponAnimations,
        true
      ),
      characterWeaponAnimationPointers + i * 4
    );

    // Add all weapon animation pointers to the table
    const animationPointersWrite = FFTAUtils.joinUint8Array([
      FFTAUtils.getWordUint8Array(newWeapon0Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon1Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon0Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon1Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon0Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon1Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon2Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon3Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon2Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon3Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon4Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon5Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon6Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon7Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon6Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon7Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon6Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon7Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon8Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon9Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon8Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon9Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon10Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newWeapon11Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
    ]);
    fftaData.rom.set(
      animationPointersWrite,
      weaponAnimationPointers + i * weaponAnimations
    );

    // Add all weapon animations to the table
    const animationBlock = FFTAUtils.joinUint8Array([
      newWeapon0,
      newWeapon1,
      newWeapon2,
      newWeapon3,
      newWeapon4,
      newWeapon5,
      newWeapon6,
      newWeapon7,
      newWeapon8,
      newWeapon9,
      newWeapon10,
      newWeapon11,
    ]);
    fftaData.rom.set(animationBlock, animationsTable + i * animationLength);

    // Create Special Animations
    // Create new pointers and animations based on existing key frames
    // Talking Front
    const newAbility0Pointer =
      0x08000000 + abilityAnimationsTable + i * abilityAnimationLength;
    let newAbility0 = buildAnimation([
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    // Talking Back
    const newAbility1Pointer = newAbility0Pointer + newAbility0.length;
    let newAbility1 = buildAnimation([
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Morph Front
    const newAbility2Pointer = newAbility1Pointer + newAbility1.length;
    let newAbility2 = buildAnimation([
      {
        offset: parseInt(characterFrames[1][0], 16),
        oam: characterFrames[1][1] as number,
        duration: 0xc,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[2][0], 16),
        oam: characterFrames[2][1] as number,
        duration: 0xc,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Morph Back
    const newAbility3Pointer = newAbility2Pointer + newAbility2.length;
    let newAbility3 = buildAnimation([
      {
        offset: parseInt(characterFrames[4][0], 16),
        oam: characterFrames[4][1] as number,
        duration: 0xc,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[5][0], 16),
        oam: characterFrames[5][1] as number,
        duration: 0xc,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Stunt Front
    const newAbility4Pointer = newAbility3Pointer + newAbility3.length;
    let newAbility4 = buildAnimation([
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0xc,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[22][0], 16),
        oam: characterFrames[22][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Stunt Back
    const newAbility5Pointer = newAbility4Pointer + newAbility4.length;
    let newAbility5 = buildAnimation([
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0xc,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[23][0], 16),
        oam: characterFrames[23][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Swing Front
    const newAbility6Pointer = newAbility5Pointer + newAbility5.length;
    let newAbility6 = buildAnimation([
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[22][0], 16),
        oam: characterFrames[22][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[22][0], 16),
        oam: characterFrames[22][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[8][0], 16),
        oam: characterFrames[8][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Swing Back
    const newAbility7Pointer = newAbility6Pointer + newAbility6.length;
    let newAbility7 = buildAnimation([
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[23][0], 16),
        oam: characterFrames[23][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[23][0], 16),
        oam: characterFrames[23][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xffe,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[11][0], 16),
        oam: characterFrames[11][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Conceal Front
    const newAbility8Pointer = newAbility7Pointer + newAbility7.length;
    let newAbility8 = buildAnimation([
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Conceal Back
    const newAbility9Pointer = newAbility8Pointer + newAbility8.length;
    let newAbility9 = buildAnimation([
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Spin Front
    const newAbility10Pointer = newAbility9Pointer + newAbility9.length;
    let newAbility10 = buildAnimation([
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x14,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Spin Back
    const newAbility11Pointer = newAbility10Pointer + newAbility10.length;
    let newAbility11 = buildAnimation([
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x14,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x100,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[24][0], 16),
        oam: characterFrames[24][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Throw Front
    const newAbility12Pointer = newAbility11Pointer + newAbility11.length;
    let newAbility12 = buildAnimation([
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0xc,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[22][0], 16),
        oam: characterFrames[22][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[22][0], 16),
        oam: characterFrames[22][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[22][0], 16),
        oam: characterFrames[22][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0xa,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[26][0], 16),
        oam: characterFrames[26][1] as number,
        duration: 0x20,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0xa,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Throw Back
    const newAbility13Pointer = newAbility12Pointer + newAbility12.length;
    let newAbility13 = buildAnimation([
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[27][0], 16),
        oam: characterFrames[27][1] as number,
        duration: 0xc,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[23][0], 16),
        oam: characterFrames[23][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[23][0], 16),
        oam: characterFrames[23][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[23][0], 16),
        oam: characterFrames[23][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[28][0], 16),
        oam: characterFrames[28][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x6,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[29][0], 16),
        oam: characterFrames[29][1] as number,
        duration: 0x20,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffc,
        xPos: 0x6,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x4,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Yell Front
    const newAbility14Pointer = newAbility13Pointer + newAbility13.length;
    let newAbility14 = buildAnimation([
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x2,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x18,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0x6,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffe,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[8][0], 16),
        oam: characterFrames[8][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Yell Back
    const newAbility15Pointer = newAbility14Pointer + newAbility14.length;
    let newAbility15 = buildAnimation([
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x3,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x2,
        xPos: 0x9,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x18,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x4,
        xPos: 0xa,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x2,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0xfffe,
        xPos: 0x7,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0xfffe,
        xPos: 0x7,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[10][0], 16),
        oam: characterFrames[10][1] as number,
        duration: 0xa,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Prayer Front
    const newAbility16Pointer = newAbility15Pointer + newAbility15.length;
    let newAbility16 = buildAnimation([
      {
        offset: parseInt(characterFrames[18][0], 16),
        oam: characterFrames[18][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Prayer Back
    const newAbility17Pointer = newAbility16Pointer + newAbility16.length;
    let newAbility17 = buildAnimation([
      {
        offset: parseInt(characterFrames[19][0], 16),
        oam: characterFrames[19][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Ninjutsu Front
    const newAbility18Pointer = newAbility17Pointer + newAbility17.length;
    let newAbility18 = buildAnimation([
      {
        offset: parseInt(characterFrames[18][0], 16),
        oam: characterFrames[18][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Ninjutsu Back
    const newAbility19Pointer = newAbility18Pointer + newAbility18.length;
    let newAbility19 = buildAnimation([
      {
        offset: parseInt(characterFrames[19][0], 16),
        oam: characterFrames[19][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Charged Punch Front
    const newAbility20Pointer = newAbility19Pointer + newAbility19.length;
    let newAbility20 = buildAnimation([
      {
        offset: parseInt(characterFrames[22][0], 16),
        oam: characterFrames[22][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Charged Punch Back
    const newAbility21Pointer = newAbility20Pointer + newAbility20.length;
    let newAbility21 = buildAnimation([
      {
        offset: parseInt(characterFrames[23][0], 16),
        oam: characterFrames[23][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Provoke Front
    const newAbility22Pointer = newAbility21Pointer + newAbility21.length;
    let newAbility22 = buildAnimation([
      {
        offset: parseInt(characterFrames[0][0], 16),
        oam: characterFrames[0][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Provoke Back
    const newAbility23Pointer = newAbility22Pointer + newAbility22.length;
    let newAbility23 = buildAnimation([
      {
        offset: parseInt(characterFrames[3][0], 16),
        oam: characterFrames[3][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Jump Part 1 Front
    const newAbility24Pointer = newAbility23Pointer + newAbility23.length;
    let newAbility24 = buildAnimation([
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0xc,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[18][0], 16),
        oam: characterFrames[18][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Jump Part 1 Back
    const newAbility25Pointer = newAbility24Pointer + newAbility24.length;
    let newAbility25 = buildAnimation([
      {
        offset: parseInt(characterFrames[9][0], 16),
        oam: characterFrames[9][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[21][0], 16),
        oam: characterFrames[21][1] as number,
        duration: 0xc,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[19][0], 16),
        oam: characterFrames[19][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    //Jump Part 2 Front/Back
    const newAbility26Pointer = newAbility25Pointer + newAbility25.length;
    let newAbility26 = buildAnimation([
      {
        offset: parseInt(characterFrames[25][0], 16),
        oam: characterFrames[25][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[18][0], 16),
        oam: characterFrames[18][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x2,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x1,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x1,
        unknown: 0x8,
        short1: 0x3,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x1,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[14][0], 16),
        oam: characterFrames[14][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x3,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[20][0], 16),
        oam: characterFrames[20][1] as number,
        duration: 0x6,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
      {
        offset: parseInt(characterFrames[6][0], 16),
        oam: characterFrames[6][1] as number,
        duration: 0x8,
        unknown: 0x1,
        short1: 0x0,
        short2: 0x0,
        xPos: 0x8,
        yPos: 0x0,
        short5: 0x0,
      },
    ]);

    // Add pointer to the weapon animation pointer table
    fftaData.rom.set(
      FFTAUtils.getWordUint8Array(
        0x08000000 + abilityAnimationPointers + i * abilityAnimations,
        true
      ),
      characterAbilityAnimationPointers + i * 4
    );

    // Add all ability animation pointers to the table
    const abilityAnimationPointersWrite = FFTAUtils.joinUint8Array([
      FFTAUtils.getWordUint8Array(newAbility0Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility1Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility2Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility3Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility4Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility5Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility6Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility7Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility8Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility9Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility10Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility11Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility12Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility13Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility14Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility15Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility16Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility17Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility18Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility19Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility20Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility21Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility22Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility23Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility24Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility25Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility26Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
      FFTAUtils.getWordUint8Array(newAbility26Pointer, true),
      new Uint8Array(4),
      new Uint8Array(4),
    ]);
    fftaData.rom.set(
      abilityAnimationPointersWrite,
      abilityAnimationPointers + i * abilityAnimations
    );

    // Add all weapon animations to the table
    const abilityAnimationBlock = FFTAUtils.joinUint8Array([
      newAbility0,
      newAbility1,
      newAbility2,
      newAbility3,
      newAbility4,
      newAbility5,
      newAbility6,
      newAbility7,
      newAbility8,
      newAbility9,
      newAbility10,
      newAbility11,
      newAbility12,
      newAbility13,
      newAbility14,
      newAbility15,
      newAbility16,
      newAbility17,
      newAbility18,
      newAbility19,
      newAbility20,
      newAbility21,
      newAbility22,
      newAbility23,
      newAbility24,
      newAbility25,
      newAbility26,
    ]);
    fftaData.rom.set(
      abilityAnimationBlock,
      abilityAnimationsTable + i * abilityAnimationLength
    );
  }
}

export function createAbilityAnimations(fftaData: FFTAData) {}

/**
 * Helper function to build animations
 * @param keyFrames The key frame information to use for each key frame of animation
 * @returns Uint8Array of the animation
 */
function buildAnimation(keyFrames: Array<KeyFrame>) {
  let animation = new Uint8Array(
    FFTAUtils.getWordUint8Array(keyFrames.length, true)
  );

  // For each key frame, format the information as a Uint8Array
  // Join it to the animation
  keyFrames.forEach((frame: KeyFrame) => {
    const offset = new Uint8Array(
      FFTAUtils.getWordUint8Array(frame.offset, true)
    );
    const oam = new Uint8Array(
      FFTAUtils.getWordUint8Array(parseInt(frame.oam.toString(), 16), true)
    );
    const duration = new Uint8Array([frame.duration]);
    const unknown = new Uint8Array([frame.unknown]);
    const short1 = new Uint8Array(
      FFTAUtils.getShortUint8Array(frame.short1, true)
    );
    const short2 = new Uint8Array(
      FFTAUtils.getShortUint8Array(frame.short2, true)
    );
    const xPos = new Uint8Array(FFTAUtils.getShortUint8Array(frame.xPos, true));
    const yPos = new Uint8Array(FFTAUtils.getShortUint8Array(frame.yPos, true));
    const short5 = new Uint8Array(
      FFTAUtils.getShortUint8Array(frame.short5, true)
    );
    animation = FFTAUtils.joinUint8Array([
      animation,
      offset,
      oam,
      duration,
      unknown,
      short1,
      short2,
      xPos,
      yPos,
      short5,
    ]);
  });

  // Align the information by 4 to null terminate
  const alignment = 4 - (animation.length % 4);
  if (alignment != 4) {
    animation = FFTAUtils.joinUint8Array([
      animation,
      new Uint8Array(alignment),
    ]);
  }
  return animation;
}
